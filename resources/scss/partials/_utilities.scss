@use "bootstrap/scss/vendor/rfs";
@import "../variables";
@import "bootstrap/scss/mixins/breakpoints";

.d-block {
  display: block !important;
}

.d-none {
  display: none !important;
}

@include media-breakpoint-up(md) {
  .d-md-block {
    display: block !important;
  }
}

// FLEXBOX

.d-flex {
  display: flex !important;
}

.flex-center {
  display:         flex !important;
  align-items:     center !important;
  justify-content: center !important;
}

.flex-column {
  flex-direction: column !important;
}

.align-start {
  align-items: flex-start !important;
}

.align-end {
  align-items: flex-end !important;
}

.align-center {
  align-items: center !important;
}

.justify-center {
  justify-content: center !important;
}

.justify-around {
  justify-content: space-around !important;
}

.fill-childs {
  flex-wrap: wrap;
  
  & > * {
    flex-grow:  1;
    flex-basis: 0;
    height:     100%;
  }
}

@include media-breakpoint-up(md) {
  .flex-md-column {
    flex-direction: column !important;
  }
  
  .flex-md-row {
    flex-direction: row !important;
  }
  
  .align-md-center {
    align-items: center !important;
  }
  
  .align-md-start {
    align-items: flex-start !important;
  }
  
  .align-md-stretch {
    align-items: stretch !important;
  }
}

@for $i from 1 through 5 {
  .gap-#{$i} {
    gap: #{$i}rem !important;
  }
}

@include media-breakpoint-up(md) {
  .gap-md-1 {
    gap: 1rem !important;
  }
}

// Typography

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right !important;
}

@include media-breakpoint-up(md) {
  .text-md-center {
    text-align: center !important;
  }
  .text-md-right {
    text-align: right !important;
  }
  .text-md-left {
    text-align: left !important;
  }
}

.text-uppercase {
  text-transform: uppercase !important;
}

.text-underline {
  text-decoration: underline !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

.small, small {
  font-size:   0.8em;
  line-height: 1;
}

.lead {
  @include rfs.rfs(1.3rem, "font-size");
  line-height: 1.3;
}

.fw-normal {
  font-weight: 400 !important;
}

.fs-large {
  @include rfs.rfs(2.5rem, "font-size");
}

.ff-titles {
  font-family: "Reem Kufi", sans-serif;
}

.multi-column-text {
  column-count: 2;
  column-gap:   3rem;
  column-rule:  1px solid #ddd;
  text-align:   justify;
  
  p {
    margin-bottom: 1rem;
  }
  
  &.no-rule {
    column-rule: none;
  }
  
  @include media-breakpoint-down(lg) {
    column-gap:  2rem;
    column-rule: none;
  }
  
  @include media-breakpoint-down(md) {
    column-gap: 1rem;
  }
  
  @include media-breakpoint-down(sm) {
    &.multi-column-break-sm {
      column-count: 1;
      text-align:   left;
    }
  }
}

.multi-column-gap-0 {
  column-gap: 0 !important;
}

.multi-column-gap-1 {
  column-gap: 1rem !important;
}

// Spacing

@for $i from 0 through 5 {
  .mb-#{$i} {
    margin-bottom: #{$i}rem !important;
  }
  .mt-#{$i} {
    margin-top: #{$i}rem !important;
  }
  .my-#{$i} {
    margin-top:    #{$i}rem !important;
    margin-bottom: #{$i}rem !important;
  }
}

@for $i from 0 through 10 {
  .pb-#{$i} {
    padding-bottom: #{$i}rem !important;
  }
  .pt-#{$i} {
    padding-top: #{$i}rem !important;
  }
  .py-#{$i} {
    padding-top:    #{$i}rem !important;
    padding-bottom: #{$i}rem !important;
  }
  .px-#{$i} {
    padding-left:  #{$i}rem !important;
    padding-right: #{$i}rem !important;
  }
}

.offset-top-5 {
  position: relative;
  top:      -5rem;
}

// colors
.color-light {
  color: var(--color-light) !important;
}

.color-dark {
  color: var(--color-dark) !important;
}

.color-primary {
  color: var(--color-primary) !important;
}

.color-danger {
  color: var(--color-danger) !important;
}

.color-info {
  color: var(--color-info) !important;
}

.unstyled-list {
  list-style: none;
  padding:    0;
  margin:     0;
}
